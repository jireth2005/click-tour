---
interface Props {
  postId?: number;
  image?: string;
  title?: string;
  location?: string;
  author?: string;
  authorImage?: string;
  description?: string;
  likes?: number;
  comments?: number;
  date?: string;
}

interface PostData {
  image: string;
  title: string;
  location: string;
  author: string;
  authorImage: string;
  description: string;
  likes: number;
  comments: number;
  date: string;
}

import { posts, users, places } from '../../data';

const { 
  postId,
  image, 
  title, 
  location, 
  author, 
  authorImage = "/placeholder-profile.jpg", 
  description, 
  likes, 
  comments,
  date
} = Astro.props;

// Si se proporciona un ID de post, obtener los datos del archivo JSON
let postData: PostData = {
  image: '',
  title: '',
  location: '',
  author: '',
  authorImage: '',
  description: '',
  likes: 0,
  comments: 0,
  date: ''
};

if (postId) {
  const post = posts.find(p => p.id === postId);
  if (post) {
    const user = users.find(u => u.id === post.user.id);
    const place = places.find(p => p.id === post.place.id);
    
    postData = {
      image: post.images[0],
      title: place?.name || post.place.name,
      location: place?.name || post.place.name,
      author: user?.name || post.user.name,
      authorImage: user?.avatar || post.user.avatar,
      description: post.content,
      likes: post.likes,
      comments: post.comments,
      date: post.date
    };
  }
}

// Usar los datos del JSON o los props proporcionados
const displayImage = postData.image || image;
const displayTitle = postData.title || title;
const displayLocation = postData.location || location;
const displayAuthor = postData.author || author;
const displayAuthorImage = postData.authorImage || authorImage;
const displayDescription = postData.description || description;
const displayLikes = postData.likes || likes;
const displayComments = postData.comments || comments;
const displayDate = postData.date ? new Date(postData.date).toLocaleDateString() : '';
---

<div class="bg-white rounded-lg shadow-md overflow-hidden mb-4 fade-in">
  <div class="p-4 flex items-center">
    <div class="w-10 h-10 rounded-full overflow-hidden mr-3">
      <img src={displayAuthorImage} alt={displayAuthor} class="w-full h-full object-cover">
    </div>
    <div>
      <h3 class="font-medium">{displayAuthor}</h3>
      <p class="text-xs text-gray-500 flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
        {displayLocation}
      </p>
      {displayDate && <p class="text-xs text-gray-400">{displayDate}</p>}
    </div>
  </div>
  
  <div class="relative">
    <img src={displayImage} alt={displayTitle} class="w-full h-64 object-cover">
    <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
      <h2 class="text-white text-xl font-semibold">{displayTitle}</h2>
    </div>
  </div>
  
  <div class="p-4">
    <p class="text-gray-700 text-sm mb-4">{displayDescription}</p>
    
    <div class="flex justify-between items-center">
      <div class="flex space-x-4">
        <button class="flex items-center text-gray-600 hover:text-primary">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
          </svg>
          <span>{displayLikes}</span>
        </button>
        <button class="flex items-center text-gray-600 hover:text-primary">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
          </svg>
          <span>{displayComments}</span>
        </button>
      </div>
      
      <button class="text-gray-600 hover:text-primary">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
        </svg>
      </button>
    </div>
  </div>
</div> 